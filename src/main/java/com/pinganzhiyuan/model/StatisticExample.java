package com.pinganzhiyuan.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class StatisticExample {
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table statistic
     * @mbg.generated  Tue Dec 26 15:59:52 CST 2017
     */
    protected String orderByClause;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table statistic
     * @mbg.generated  Tue Dec 26 15:59:52 CST 2017
     */
    protected boolean distinct;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table statistic
     * @mbg.generated  Tue Dec 26 15:59:52 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table statistic
     * @mbg.generated  Tue Dec 26 15:59:52 CST 2017
     */
    public StatisticExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table statistic
     * @mbg.generated  Tue Dec 26 15:59:52 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table statistic
     * @mbg.generated  Tue Dec 26 15:59:52 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table statistic
     * @mbg.generated  Tue Dec 26 15:59:52 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table statistic
     * @mbg.generated  Tue Dec 26 15:59:52 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table statistic
     * @mbg.generated  Tue Dec 26 15:59:52 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table statistic
     * @mbg.generated  Tue Dec 26 15:59:52 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table statistic
     * @mbg.generated  Tue Dec 26 15:59:52 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table statistic
     * @mbg.generated  Tue Dec 26 15:59:52 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table statistic
     * @mbg.generated  Tue Dec 26 15:59:52 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table statistic
     * @mbg.generated  Tue Dec 26 15:59:52 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table statistic
     * @mbg.generated  Tue Dec 26 15:59:52 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andRecordDateIsNull() {
            addCriterion("record_date is null");
            return (Criteria) this;
        }

        public Criteria andRecordDateIsNotNull() {
            addCriterion("record_date is not null");
            return (Criteria) this;
        }

        public Criteria andRecordDateEqualTo(Date value) {
            addCriterionForJDBCDate("record_date =", value, "recordDate");
            return (Criteria) this;
        }

        public Criteria andRecordDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("record_date <>", value, "recordDate");
            return (Criteria) this;
        }

        public Criteria andRecordDateGreaterThan(Date value) {
            addCriterionForJDBCDate("record_date >", value, "recordDate");
            return (Criteria) this;
        }

        public Criteria andRecordDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("record_date >=", value, "recordDate");
            return (Criteria) this;
        }

        public Criteria andRecordDateLessThan(Date value) {
            addCriterionForJDBCDate("record_date <", value, "recordDate");
            return (Criteria) this;
        }

        public Criteria andRecordDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("record_date <=", value, "recordDate");
            return (Criteria) this;
        }

        public Criteria andRecordDateIn(List<Date> values) {
            addCriterionForJDBCDate("record_date in", values, "recordDate");
            return (Criteria) this;
        }

        public Criteria andRecordDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("record_date not in", values, "recordDate");
            return (Criteria) this;
        }

        public Criteria andRecordDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("record_date between", value1, value2, "recordDate");
            return (Criteria) this;
        }

        public Criteria andRecordDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("record_date not between", value1, value2, "recordDate");
            return (Criteria) this;
        }

        public Criteria andNewDeviceCountIsNull() {
            addCriterion("new_device_count is null");
            return (Criteria) this;
        }

        public Criteria andNewDeviceCountIsNotNull() {
            addCriterion("new_device_count is not null");
            return (Criteria) this;
        }

        public Criteria andNewDeviceCountEqualTo(Integer value) {
            addCriterion("new_device_count =", value, "newDeviceCount");
            return (Criteria) this;
        }

        public Criteria andNewDeviceCountNotEqualTo(Integer value) {
            addCriterion("new_device_count <>", value, "newDeviceCount");
            return (Criteria) this;
        }

        public Criteria andNewDeviceCountGreaterThan(Integer value) {
            addCriterion("new_device_count >", value, "newDeviceCount");
            return (Criteria) this;
        }

        public Criteria andNewDeviceCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("new_device_count >=", value, "newDeviceCount");
            return (Criteria) this;
        }

        public Criteria andNewDeviceCountLessThan(Integer value) {
            addCriterion("new_device_count <", value, "newDeviceCount");
            return (Criteria) this;
        }

        public Criteria andNewDeviceCountLessThanOrEqualTo(Integer value) {
            addCriterion("new_device_count <=", value, "newDeviceCount");
            return (Criteria) this;
        }

        public Criteria andNewDeviceCountIn(List<Integer> values) {
            addCriterion("new_device_count in", values, "newDeviceCount");
            return (Criteria) this;
        }

        public Criteria andNewDeviceCountNotIn(List<Integer> values) {
            addCriterion("new_device_count not in", values, "newDeviceCount");
            return (Criteria) this;
        }

        public Criteria andNewDeviceCountBetween(Integer value1, Integer value2) {
            addCriterion("new_device_count between", value1, value2, "newDeviceCount");
            return (Criteria) this;
        }

        public Criteria andNewDeviceCountNotBetween(Integer value1, Integer value2) {
            addCriterion("new_device_count not between", value1, value2, "newDeviceCount");
            return (Criteria) this;
        }

        public Criteria andNewUserCountIsNull() {
            addCriterion("new_user_count is null");
            return (Criteria) this;
        }

        public Criteria andNewUserCountIsNotNull() {
            addCriterion("new_user_count is not null");
            return (Criteria) this;
        }

        public Criteria andNewUserCountEqualTo(Integer value) {
            addCriterion("new_user_count =", value, "newUserCount");
            return (Criteria) this;
        }

        public Criteria andNewUserCountNotEqualTo(Integer value) {
            addCriterion("new_user_count <>", value, "newUserCount");
            return (Criteria) this;
        }

        public Criteria andNewUserCountGreaterThan(Integer value) {
            addCriterion("new_user_count >", value, "newUserCount");
            return (Criteria) this;
        }

        public Criteria andNewUserCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("new_user_count >=", value, "newUserCount");
            return (Criteria) this;
        }

        public Criteria andNewUserCountLessThan(Integer value) {
            addCriterion("new_user_count <", value, "newUserCount");
            return (Criteria) this;
        }

        public Criteria andNewUserCountLessThanOrEqualTo(Integer value) {
            addCriterion("new_user_count <=", value, "newUserCount");
            return (Criteria) this;
        }

        public Criteria andNewUserCountIn(List<Integer> values) {
            addCriterion("new_user_count in", values, "newUserCount");
            return (Criteria) this;
        }

        public Criteria andNewUserCountNotIn(List<Integer> values) {
            addCriterion("new_user_count not in", values, "newUserCount");
            return (Criteria) this;
        }

        public Criteria andNewUserCountBetween(Integer value1, Integer value2) {
            addCriterion("new_user_count between", value1, value2, "newUserCount");
            return (Criteria) this;
        }

        public Criteria andNewUserCountNotBetween(Integer value1, Integer value2) {
            addCriterion("new_user_count not between", value1, value2, "newUserCount");
            return (Criteria) this;
        }

        public Criteria andDeviceVisitCountIsNull() {
            addCriterion("device_visit_count is null");
            return (Criteria) this;
        }

        public Criteria andDeviceVisitCountIsNotNull() {
            addCriterion("device_visit_count is not null");
            return (Criteria) this;
        }

        public Criteria andDeviceVisitCountEqualTo(Integer value) {
            addCriterion("device_visit_count =", value, "deviceVisitCount");
            return (Criteria) this;
        }

        public Criteria andDeviceVisitCountNotEqualTo(Integer value) {
            addCriterion("device_visit_count <>", value, "deviceVisitCount");
            return (Criteria) this;
        }

        public Criteria andDeviceVisitCountGreaterThan(Integer value) {
            addCriterion("device_visit_count >", value, "deviceVisitCount");
            return (Criteria) this;
        }

        public Criteria andDeviceVisitCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("device_visit_count >=", value, "deviceVisitCount");
            return (Criteria) this;
        }

        public Criteria andDeviceVisitCountLessThan(Integer value) {
            addCriterion("device_visit_count <", value, "deviceVisitCount");
            return (Criteria) this;
        }

        public Criteria andDeviceVisitCountLessThanOrEqualTo(Integer value) {
            addCriterion("device_visit_count <=", value, "deviceVisitCount");
            return (Criteria) this;
        }

        public Criteria andDeviceVisitCountIn(List<Integer> values) {
            addCriterion("device_visit_count in", values, "deviceVisitCount");
            return (Criteria) this;
        }

        public Criteria andDeviceVisitCountNotIn(List<Integer> values) {
            addCriterion("device_visit_count not in", values, "deviceVisitCount");
            return (Criteria) this;
        }

        public Criteria andDeviceVisitCountBetween(Integer value1, Integer value2) {
            addCriterion("device_visit_count between", value1, value2, "deviceVisitCount");
            return (Criteria) this;
        }

        public Criteria andDeviceVisitCountNotBetween(Integer value1, Integer value2) {
            addCriterion("device_visit_count not between", value1, value2, "deviceVisitCount");
            return (Criteria) this;
        }

        public Criteria andUserVisitCountIsNull() {
            addCriterion("user_visit_count is null");
            return (Criteria) this;
        }

        public Criteria andUserVisitCountIsNotNull() {
            addCriterion("user_visit_count is not null");
            return (Criteria) this;
        }

        public Criteria andUserVisitCountEqualTo(Integer value) {
            addCriterion("user_visit_count =", value, "userVisitCount");
            return (Criteria) this;
        }

        public Criteria andUserVisitCountNotEqualTo(Integer value) {
            addCriterion("user_visit_count <>", value, "userVisitCount");
            return (Criteria) this;
        }

        public Criteria andUserVisitCountGreaterThan(Integer value) {
            addCriterion("user_visit_count >", value, "userVisitCount");
            return (Criteria) this;
        }

        public Criteria andUserVisitCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_visit_count >=", value, "userVisitCount");
            return (Criteria) this;
        }

        public Criteria andUserVisitCountLessThan(Integer value) {
            addCriterion("user_visit_count <", value, "userVisitCount");
            return (Criteria) this;
        }

        public Criteria andUserVisitCountLessThanOrEqualTo(Integer value) {
            addCriterion("user_visit_count <=", value, "userVisitCount");
            return (Criteria) this;
        }

        public Criteria andUserVisitCountIn(List<Integer> values) {
            addCriterion("user_visit_count in", values, "userVisitCount");
            return (Criteria) this;
        }

        public Criteria andUserVisitCountNotIn(List<Integer> values) {
            addCriterion("user_visit_count not in", values, "userVisitCount");
            return (Criteria) this;
        }

        public Criteria andUserVisitCountBetween(Integer value1, Integer value2) {
            addCriterion("user_visit_count between", value1, value2, "userVisitCount");
            return (Criteria) this;
        }

        public Criteria andUserVisitCountNotBetween(Integer value1, Integer value2) {
            addCriterion("user_visit_count not between", value1, value2, "userVisitCount");
            return (Criteria) this;
        }

        public Criteria andProductVisitTotalCountIsNull() {
            addCriterion("product_visit_total_count is null");
            return (Criteria) this;
        }

        public Criteria andProductVisitTotalCountIsNotNull() {
            addCriterion("product_visit_total_count is not null");
            return (Criteria) this;
        }

        public Criteria andProductVisitTotalCountEqualTo(Integer value) {
            addCriterion("product_visit_total_count =", value, "productVisitTotalCount");
            return (Criteria) this;
        }

        public Criteria andProductVisitTotalCountNotEqualTo(Integer value) {
            addCriterion("product_visit_total_count <>", value, "productVisitTotalCount");
            return (Criteria) this;
        }

        public Criteria andProductVisitTotalCountGreaterThan(Integer value) {
            addCriterion("product_visit_total_count >", value, "productVisitTotalCount");
            return (Criteria) this;
        }

        public Criteria andProductVisitTotalCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("product_visit_total_count >=", value, "productVisitTotalCount");
            return (Criteria) this;
        }

        public Criteria andProductVisitTotalCountLessThan(Integer value) {
            addCriterion("product_visit_total_count <", value, "productVisitTotalCount");
            return (Criteria) this;
        }

        public Criteria andProductVisitTotalCountLessThanOrEqualTo(Integer value) {
            addCriterion("product_visit_total_count <=", value, "productVisitTotalCount");
            return (Criteria) this;
        }

        public Criteria andProductVisitTotalCountIn(List<Integer> values) {
            addCriterion("product_visit_total_count in", values, "productVisitTotalCount");
            return (Criteria) this;
        }

        public Criteria andProductVisitTotalCountNotIn(List<Integer> values) {
            addCriterion("product_visit_total_count not in", values, "productVisitTotalCount");
            return (Criteria) this;
        }

        public Criteria andProductVisitTotalCountBetween(Integer value1, Integer value2) {
            addCriterion("product_visit_total_count between", value1, value2, "productVisitTotalCount");
            return (Criteria) this;
        }

        public Criteria andProductVisitTotalCountNotBetween(Integer value1, Integer value2) {
            addCriterion("product_visit_total_count not between", value1, value2, "productVisitTotalCount");
            return (Criteria) this;
        }

        public Criteria andProductVisitUserTotalCountIsNull() {
            addCriterion("product_visit_user_total_count is null");
            return (Criteria) this;
        }

        public Criteria andProductVisitUserTotalCountIsNotNull() {
            addCriterion("product_visit_user_total_count is not null");
            return (Criteria) this;
        }

        public Criteria andProductVisitUserTotalCountEqualTo(Integer value) {
            addCriterion("product_visit_user_total_count =", value, "productVisitUserTotalCount");
            return (Criteria) this;
        }

        public Criteria andProductVisitUserTotalCountNotEqualTo(Integer value) {
            addCriterion("product_visit_user_total_count <>", value, "productVisitUserTotalCount");
            return (Criteria) this;
        }

        public Criteria andProductVisitUserTotalCountGreaterThan(Integer value) {
            addCriterion("product_visit_user_total_count >", value, "productVisitUserTotalCount");
            return (Criteria) this;
        }

        public Criteria andProductVisitUserTotalCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("product_visit_user_total_count >=", value, "productVisitUserTotalCount");
            return (Criteria) this;
        }

        public Criteria andProductVisitUserTotalCountLessThan(Integer value) {
            addCriterion("product_visit_user_total_count <", value, "productVisitUserTotalCount");
            return (Criteria) this;
        }

        public Criteria andProductVisitUserTotalCountLessThanOrEqualTo(Integer value) {
            addCriterion("product_visit_user_total_count <=", value, "productVisitUserTotalCount");
            return (Criteria) this;
        }

        public Criteria andProductVisitUserTotalCountIn(List<Integer> values) {
            addCriterion("product_visit_user_total_count in", values, "productVisitUserTotalCount");
            return (Criteria) this;
        }

        public Criteria andProductVisitUserTotalCountNotIn(List<Integer> values) {
            addCriterion("product_visit_user_total_count not in", values, "productVisitUserTotalCount");
            return (Criteria) this;
        }

        public Criteria andProductVisitUserTotalCountBetween(Integer value1, Integer value2) {
            addCriterion("product_visit_user_total_count between", value1, value2, "productVisitUserTotalCount");
            return (Criteria) this;
        }

        public Criteria andProductVisitUserTotalCountNotBetween(Integer value1, Integer value2) {
            addCriterion("product_visit_user_total_count not between", value1, value2, "productVisitUserTotalCount");
            return (Criteria) this;
        }

        public Criteria andAverageProductVisitCountIsNull() {
            addCriterion("average_product_visit_count is null");
            return (Criteria) this;
        }

        public Criteria andAverageProductVisitCountIsNotNull() {
            addCriterion("average_product_visit_count is not null");
            return (Criteria) this;
        }

        public Criteria andAverageProductVisitCountEqualTo(Double value) {
            addCriterion("average_product_visit_count =", value, "averageProductVisitCount");
            return (Criteria) this;
        }

        public Criteria andAverageProductVisitCountNotEqualTo(Double value) {
            addCriterion("average_product_visit_count <>", value, "averageProductVisitCount");
            return (Criteria) this;
        }

        public Criteria andAverageProductVisitCountGreaterThan(Double value) {
            addCriterion("average_product_visit_count >", value, "averageProductVisitCount");
            return (Criteria) this;
        }

        public Criteria andAverageProductVisitCountGreaterThanOrEqualTo(Double value) {
            addCriterion("average_product_visit_count >=", value, "averageProductVisitCount");
            return (Criteria) this;
        }

        public Criteria andAverageProductVisitCountLessThan(Double value) {
            addCriterion("average_product_visit_count <", value, "averageProductVisitCount");
            return (Criteria) this;
        }

        public Criteria andAverageProductVisitCountLessThanOrEqualTo(Double value) {
            addCriterion("average_product_visit_count <=", value, "averageProductVisitCount");
            return (Criteria) this;
        }

        public Criteria andAverageProductVisitCountIn(List<Double> values) {
            addCriterion("average_product_visit_count in", values, "averageProductVisitCount");
            return (Criteria) this;
        }

        public Criteria andAverageProductVisitCountNotIn(List<Double> values) {
            addCriterion("average_product_visit_count not in", values, "averageProductVisitCount");
            return (Criteria) this;
        }

        public Criteria andAverageProductVisitCountBetween(Double value1, Double value2) {
            addCriterion("average_product_visit_count between", value1, value2, "averageProductVisitCount");
            return (Criteria) this;
        }

        public Criteria andAverageProductVisitCountNotBetween(Double value1, Double value2) {
            addCriterion("average_product_visit_count not between", value1, value2, "averageProductVisitCount");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table statistic
     * @mbg.generated  Tue Dec 26 15:59:52 CST 2017
     */
    public static class Criterion {
        private String condition;
        private Object value;
        private Object secondValue;
        private boolean noValue;
        private boolean singleValue;
        private boolean betweenValue;
        private boolean listValue;
        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table statistic
     *
     * @mbg.generated do_not_delete_during_merge Mon Dec 25 17:56:26 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}