package com.pinganzhiyuan.mapper;

import com.pinganzhiyuan.model.StandardStatementStatistics;
import com.pinganzhiyuan.model.StandardStatementStatisticsExample;

import java.util.Date;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;

public interface StandardStatementStatisticsMapper {
    /**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table standard_statement_statistics
	 * @mbg.generated  Thu Jan 11 10:59:20 CST 2018
	 */
	long countByExample(StandardStatementStatisticsExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table standard_statement_statistics
	 * @mbg.generated  Thu Jan 11 10:59:20 CST 2018
	 */
	int deleteByExample(StandardStatementStatisticsExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table standard_statement_statistics
	 * @mbg.generated  Thu Jan 11 10:59:20 CST 2018
	 */
	@Delete({ "delete from standard_statement_statistics", "where id = #{id,jdbcType=BIGINT}" })
	int deleteByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table standard_statement_statistics
	 * @mbg.generated  Thu Jan 11 10:59:20 CST 2018
	 */
	@Insert({ "insert into standard_statement_statistics (statistic_date, channel_name, ",
			"app_product_name, new_device_count, ", "new_user_count, new_user_product_uv_count, ",
			"active_device_count, active_user_count, ", "all_product_uv_count)",
			"values (#{statisticDate,jdbcType=DATE}, #{channelName,jdbcType=VARCHAR}, ",
			"#{appProductName,jdbcType=VARCHAR}, #{newDeviceCount,jdbcType=INTEGER}, ",
			"#{newUserCount,jdbcType=INTEGER}, #{newUserProductUvCount,jdbcType=INTEGER}, ",
			"#{activeDeviceCount,jdbcType=INTEGER}, #{activeUserCount,jdbcType=INTEGER}, ",
			"#{allProductUvCount,jdbcType=INTEGER})" })
	@SelectKey(statement = "SELECT LAST_INSERT_ID()", keyProperty = "id", before = false, resultType = Long.class)
	int insert(StandardStatementStatistics record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table standard_statement_statistics
	 * @mbg.generated  Thu Jan 11 10:59:20 CST 2018
	 */
	int insertSelective(StandardStatementStatistics record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table standard_statement_statistics
	 * @mbg.generated  Thu Jan 11 10:59:20 CST 2018
	 */
	List<StandardStatementStatistics> selectByExample(StandardStatementStatisticsExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table standard_statement_statistics
	 * @mbg.generated  Thu Jan 11 10:59:20 CST 2018
	 */
	@Select({ "select", "id, statistic_date, channel_name, app_product_name, new_device_count, new_user_count, ",
			"new_user_product_uv_count, active_device_count, active_user_count, all_product_uv_count",
			"from standard_statement_statistics", "where id = #{id,jdbcType=BIGINT}" })
	@ResultMap("com.pinganzhiyuan.mapper.StandardStatementStatisticsMapper.BaseResultMap")
	StandardStatementStatistics selectByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table standard_statement_statistics
	 * @mbg.generated  Thu Jan 11 10:59:20 CST 2018
	 */
	int updateByExampleSelective(@Param("record") StandardStatementStatistics record,
			@Param("example") StandardStatementStatisticsExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table standard_statement_statistics
	 * @mbg.generated  Thu Jan 11 10:59:20 CST 2018
	 */
	int updateByExample(@Param("record") StandardStatementStatistics record,
			@Param("example") StandardStatementStatisticsExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table standard_statement_statistics
	 * @mbg.generated  Thu Jan 11 10:59:20 CST 2018
	 */
	int updateByPrimaryKeySelective(StandardStatementStatistics record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table standard_statement_statistics
	 * @mbg.generated  Thu Jan 11 10:59:20 CST 2018
	 */
	@Update({ "update standard_statement_statistics", "set statistic_date = #{statisticDate,jdbcType=DATE},",
			"channel_name = #{channelName,jdbcType=VARCHAR},", "app_product_name = #{appProductName,jdbcType=VARCHAR},",
			"new_device_count = #{newDeviceCount,jdbcType=INTEGER},",
			"new_user_count = #{newUserCount,jdbcType=INTEGER},",
			"new_user_product_uv_count = #{newUserProductUvCount,jdbcType=INTEGER},",
			"active_device_count = #{activeDeviceCount,jdbcType=INTEGER},",
			"active_user_count = #{activeUserCount,jdbcType=INTEGER},",
			"all_product_uv_count = #{allProductUvCount,jdbcType=INTEGER}", "where id = #{id,jdbcType=BIGINT}" })
	int updateByPrimaryKey(StandardStatementStatistics record);

	@Select({ "select count(*) as countNumber from statistic_device " + 
    "where app_product_name = #{appProductName,jdbcType=VARCHAR} and date(maiden_start_time) = date(#{date})"})
    @ResultMap("com.pinganzhiyuan.mapper.StandardStatementStatisticsMapper.ResultOfInteger")
	Integer selectNewDeviceCountByAppProductNameAndDate(@Param("appProductName") String appProductName,@Param("date") Date date);
    
    @Select({ "SELECT count(1) as countNumber from (\n" +
    	"select b.* from device_log as a join user as b \n" +
    	"on a.user_id = b.id \n" +
    	"where date(b.created_at) = date(#{date}) \n" +
    	"and a.package_name = #{packageName,jdbcType=VARCHAR} GROUP BY a.user_id) as c\n" +
    	"union\n" +
    	"SELECT count(1) as countNumber from (\n" +
    	"select b.* from device_log as a join user as b \n" +
    	"on a.user_id = b.id \n" +
    	"where date(b.created_at) = date(#{date}) \n" +
    	"and a.channel_id = #{channelId,jdbcType=BIGINT} and a.version = #{version,jdbcType=INTEGER} GROUP BY a.user_id) as d"})
    @ResultMap("com.pinganzhiyuan.mapper.StandardStatementStatisticsMapper.ResultOfInteger")
	List<Integer> selectNewUserCountByPackageNameDateChannelIdAndVersion(
			@Param("packageName") String packageName,@Param("date") Date date,@Param("channelId") Long channelId,@Param("version") int version);
    
    @Select({ "select count(*) as countNumber from (\n" +
    	"select d.* from device_log as d join (\n" + 
    	"select a.* from device_log as a join user as b \n" +
    	"on a.user_id = b.id \n" + 
    	"where date(b.created_at) = date(#{date}) \n" +
    	"and a.package_name = #{packageName,jdbcType=VARCHAR} GROUP BY a.user_id\n" +
    	"union\n" +
    	"select a.* from device_log as a join user as b \n" +
    	"on a.user_id = b.id \n" +
    	"where date(b.created_at) = date(#{date}) \n" +
    	"and a.channel_id = #{channelId,jdbcType=BIGINT} and a.version = #{version,jdbcType=INTEGER} \n" +
    	"GROUP BY a.user_id) as c on c.user_id = d.user_id where d.is_webview = 1 GROUP BY d.user_id,d.p_id ) as e" })
    @ResultMap("com.pinganzhiyuan.mapper.StandardStatementStatisticsMapper.ResultOfInteger")
	Integer selectNewUserProductUvCountByPackageNameDateChannelIdAndVersion(
			@Param("packageName") String packageName,@Param("date") Date date,@Param("channelId") Long channelId,@Param("version") int version);
    
    @Select({ "select count(DISTINCT device_id) as countNumber from device_log where \n" +
    		"date(created_at) =  date(#{date}) \n" +
    		"and package_name = #{packageName,jdbcType=VARCHAR}\n" +
    		"UNION\n" +
    		"select count(DISTINCT device_id) as countNumber from device_log where \n" +
    		"date(created_at) =  date(#{date}) \n" +
    		"and channel_id = #{channelId,jdbcType=BIGINT} and version = #{version,jdbcType=INTEGER}" })
    @ResultMap("com.pinganzhiyuan.mapper.StandardStatementStatisticsMapper.ResultOfInteger")
	List<Integer> selectActiveDeviceCountByPackageNameDateChannelIdAndVersion(
			@Param("packageName") String packageName,@Param("date") Date date,@Param("channelId") Long channelId,@Param("version") int version);
    
   /* @Select({ "select COUNT(DISTINCT user_id) as countNumber from device_log where \n" +
    		"date(created_at) =  date(#{date}) \n" +
    		"and package_name = #{packageName,jdbcType=VARCHAR} and user_id > 0\n" +
    		"UNION\n" +
    		"select COUNT(DISTINCT user_id) as countNumber from device_log where \n" +
    		"date(created_at) =  date(#{date}) \n" +
    		"and channel_id = #{channelId,jdbcType=BIGINT} and version = #{version,jdbcType=INTEGER} and user_id > 0" })
    		//没有关联用户表的sql
   */ 
    @Select({ "select count(*) as countNumber from (\n" +
    	"select a.* \n" +
    	"from \n" +
    	"device_log as a \n" +
    	"join \n" +
    	"user as b \n" +
    	"on a.user_id = b.id \n" +
    	"where \n" +
    	"date(a.created_at) = date(#{date}) \n" +
    	"and package_name = #{packageName,jdbcType=VARCHAR}\n" +
    	"GROUP BY a.user_id\n" +
    	"UNION\n" +
    	"select a.* \n" +
    	"from \n" +
    	"device_log as a \n" +
    	"join \n" +
    	"user as b \n" +
    	"on a.user_id = b.id \n" +
    	"where \n" +
		"date(a.created_at) = date(#{date}) \n" +
		"and a.channel_id = #{channelId,jdbcType=BIGINT} and a.version = #{version,jdbcType=INTEGER}\n" +
		"GROUP BY a.user_id\n" +
		") c" })
    @ResultMap("com.pinganzhiyuan.mapper.StandardStatementStatisticsMapper.ResultOfInteger")
	List<Integer> selectActiveUserCountByPackageNameDateChannelIdAndVersion(
			@Param("packageName") String packageName,@Param("date") Date date,@Param("channelId") Long channelId,@Param("version") int version);
    
    @Select({ "select count(*) as countNumber from (\n" +
    		"select * from device_log where is_webview = 1 and user_id > 0 and \n" +
    		"date(created_at) =  date(#{date}) and package_name = #{packageName,jdbcType=VARCHAR} GROUP BY user_id,p_id \n" +
    		"UNION\n" +
    		"select * from device_log where is_webview = 1 and user_id > 0 and \n" +
    		"date(created_at) =  date(#{date}) and channel_id = #{channelId,jdbcType=BIGINT} and version = #{version,jdbcType=INTEGER} GROUP BY user_id,p_id \n" +
    		") a" })
    @ResultMap("com.pinganzhiyuan.mapper.StandardStatementStatisticsMapper.ResultOfInteger")	
	Integer selectAllProductUvCountByPackageNameDateChannelIdAndVersion(
			@Param("packageName") String packageName,@Param("date") Date date,@Param("channelId") Long channelId,@Param("version") int version);
    
    
    @Select({ "select count(*) as countNumber from statistic_device " + 
    "where app_product_name = #{appProductName,jdbcType=VARCHAR} and date(maiden_start_time) = date(#{date}) and channel_id = #{channelId,jdbcType=BIGINT}"})
    @ResultMap("com.pinganzhiyuan.mapper.StandardStatementStatisticsMapper.ResultOfInteger")	
	Integer selectNewDeviceCountByAppProductNameAndChannelIdAndDate(
			@Param("date") Date date,@Param("appProductName") String appProductName,@Param("channelId") Long channelId);

    
   }