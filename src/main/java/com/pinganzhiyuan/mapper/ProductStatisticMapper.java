package com.pinganzhiyuan.mapper;

import com.pinganzhiyuan.model.DeviceLog;
import com.pinganzhiyuan.model.ProductStatistic;
import com.pinganzhiyuan.model.ProductStatisticExample;

import java.util.Date;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;

public interface ProductStatisticMapper {
    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table product_statistic
     * @mbg.generated  Tue Dec 26 15:59:52 CST 2017
     */
    long countByExample(ProductStatisticExample example);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table product_statistic
     * @mbg.generated  Tue Dec 26 15:59:52 CST 2017
     */
    int deleteByExample(ProductStatisticExample example);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table product_statistic
     * @mbg.generated  Tue Dec 26 15:59:52 CST 2017
     */
    @Delete({ "delete from product_statistic", "where id = #{id,jdbcType=BIGINT}" })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table product_statistic
     * @mbg.generated  Tue Dec 26 15:59:52 CST 2017
     */
    @Insert({ "insert into product_statistic (product_id, product_title, ", "record_date, visit_count, ",
            "visit_user_count, average_stay_time)",
            "values (#{productId,jdbcType=BIGINT}, #{productTitle,jdbcType=VARCHAR}, ",
            "#{recordDate,jdbcType=DATE}, #{visitCount,jdbcType=INTEGER}, ",
            "#{visitUserCount,jdbcType=INTEGER}, #{averageStayTime,jdbcType=INTEGER})" })
    @SelectKey(statement = "SELECT LAST_INSERT_ID()", keyProperty = "id", before = false, resultType = Long.class)
    int insert(ProductStatistic record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table product_statistic
     * @mbg.generated  Tue Dec 26 15:59:52 CST 2017
     */
    int insertSelective(ProductStatistic record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table product_statistic
     * @mbg.generated  Tue Dec 26 15:59:52 CST 2017
     */
    List<ProductStatistic> selectByExample(ProductStatisticExample example);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table product_statistic
     * @mbg.generated  Tue Dec 26 15:59:52 CST 2017
     */
    @Select({ "select", "id, product_id, product_title, record_date, visit_count, visit_user_count, average_stay_time",
            "from product_statistic", "where id = #{id,jdbcType=BIGINT}" })
    @ResultMap("com.pinganzhiyuan.mapper.ProductStatisticMapper.BaseResultMap")
    ProductStatistic selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table product_statistic
     * @mbg.generated  Tue Dec 26 15:59:52 CST 2017
     */
    int updateByExampleSelective(@Param("record") ProductStatistic record,
            @Param("example") ProductStatisticExample example);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table product_statistic
     * @mbg.generated  Tue Dec 26 15:59:52 CST 2017
     */
    int updateByExample(@Param("record") ProductStatistic record, @Param("example") ProductStatisticExample example);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table product_statistic
     * @mbg.generated  Tue Dec 26 15:59:52 CST 2017
     */
    int updateByPrimaryKeySelective(ProductStatistic record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table product_statistic
     * @mbg.generated  Tue Dec 26 15:59:52 CST 2017
     */
    @Update({ "update product_statistic", "set product_id = #{productId,jdbcType=BIGINT},",
            "product_title = #{productTitle,jdbcType=VARCHAR},", "record_date = #{recordDate,jdbcType=DATE},",
            "visit_count = #{visitCount,jdbcType=INTEGER},", "visit_user_count = #{visitUserCount,jdbcType=INTEGER},",
            "average_stay_time = #{averageStayTime,jdbcType=INTEGER}", "where id = #{id,jdbcType=BIGINT}" })
    int updateByPrimaryKey(ProductStatistic record);

    @Select({ "select \n" + 
            "a.p_id as product_id, a.product_title, a.visit_count, b.visit_user_count, a.record_date\n" + 
            "from \n" + 
            "    (\n" + 
            "        SELECT count(*) as visit_count, \n" + 
            "        d.p_id as p_id, \n" + 
            "        DATE_FORMAT(d.created_at,'%Y-%m-%d') as record_date,\n" + 
            "        p.title as product_title\n" + 
            "        from device_log as d join product as p on d.p_id = p.id\n" + 
            "        where \n" + 
            "        d.created_at between date(#{startDate}) and date(#{endDate})  and d.p_id is not null\n" + 
            "        group by p_id\n" + 
            "    )\n" + 
            "as a join \n" + 
            "    (\n" + 
            "        select count(*) as visit_user_count, a.p_id, DATE_FORMAT(created_at,'%Y-%m-%d') as record_time from \n" + 
            "        (SELECT count(*), device_log.* from device_log\n" + 
            "        where \n" + 
            "        created_at between  date(#{startDate}) and date(#{endDate})  and p_id is not null\n" + 
            "        group by p_id, user_id) as a group by a.p_id\n" + 
            "    )\n" + 
            "as b on a.p_id = b.p_id" })
    @ResultMap("com.pinganzhiyuan.mapper.ProductStatisticMapper.BaseResultMap")
    List<ProductStatistic> getProductStatisticDataList(@Param("startDate") Date startDate, @Param("endDate") Date endDate);
}